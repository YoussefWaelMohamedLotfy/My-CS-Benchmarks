// <auto-generated />
using EFCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EFCore.Data.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            ID = 9,
                            Address = "42240 O'Hara Brook",
                            FullName = "Jade McLaughlin",
                            PhoneNumber = "1-743-688-5545"
                        },
                        new
                        {
                            ID = 10,
                            Address = "9929 Stiedemann Overpass",
                            FullName = "Hallie Becker",
                            PhoneNumber = "921-899-9386 x84166"
                        },
                        new
                        {
                            ID = 11,
                            Address = "299 Russel Ports",
                            FullName = "Eduardo Nikolaus",
                            PhoneNumber = "359.891.4416 x332"
                        },
                        new
                        {
                            ID = 12,
                            Address = "92204 Norwood Summit",
                            FullName = "Clay Erdman",
                            PhoneNumber = "1-757-609-3098"
                        },
                        new
                        {
                            ID = 13,
                            Address = "2826 Jacinto Ramp",
                            FullName = "Alberto Weissnat",
                            PhoneNumber = "459-583-7295 x5350"
                        },
                        new
                        {
                            ID = 14,
                            Address = "106 Runte Radial",
                            FullName = "Icie Romaguera",
                            PhoneNumber = "929-468-7877 x06312"
                        },
                        new
                        {
                            ID = 15,
                            Address = "63835 Mary Spring",
                            FullName = "Marlin Kiehn",
                            PhoneNumber = "1-280-620-7883"
                        },
                        new
                        {
                            ID = 16,
                            Address = "909 Weimann Vista",
                            FullName = "Dion Kessler",
                            PhoneNumber = "617-985-3966 x32492"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
